// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package http_after_response_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v4/models"
)

// GetHTTPAfterResponseRuleOKCode is the HTTP code returned for type GetHTTPAfterResponseRuleOK
const GetHTTPAfterResponseRuleOKCode int = 200

/*
GetHTTPAfterResponseRuleOK Successful operation

swagger:response getHttpAfterResponseRuleOK
*/
type GetHTTPAfterResponseRuleOK struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *GetHTTPAfterResponseRuleOKBody `json:"body,omitempty"`
}

// NewGetHTTPAfterResponseRuleOK creates GetHTTPAfterResponseRuleOK with default headers values
func NewGetHTTPAfterResponseRuleOK() *GetHTTPAfterResponseRuleOK {

	return &GetHTTPAfterResponseRuleOK{}
}

// WithConfigurationVersion adds the configurationVersion to the get Http after response rule o k response
func (o *GetHTTPAfterResponseRuleOK) WithConfigurationVersion(configurationVersion string) *GetHTTPAfterResponseRuleOK {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the get Http after response rule o k response
func (o *GetHTTPAfterResponseRuleOK) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the get Http after response rule o k response
func (o *GetHTTPAfterResponseRuleOK) WithPayload(payload *GetHTTPAfterResponseRuleOKBody) *GetHTTPAfterResponseRuleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Http after response rule o k response
func (o *GetHTTPAfterResponseRuleOK) SetPayload(payload *GetHTTPAfterResponseRuleOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHTTPAfterResponseRuleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHTTPAfterResponseRuleNotFoundCode is the HTTP code returned for type GetHTTPAfterResponseRuleNotFound
const GetHTTPAfterResponseRuleNotFoundCode int = 404

/*
GetHTTPAfterResponseRuleNotFound The specified resource was not found

swagger:response getHttpAfterResponseRuleNotFound
*/
type GetHTTPAfterResponseRuleNotFound struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHTTPAfterResponseRuleNotFound creates GetHTTPAfterResponseRuleNotFound with default headers values
func NewGetHTTPAfterResponseRuleNotFound() *GetHTTPAfterResponseRuleNotFound {

	return &GetHTTPAfterResponseRuleNotFound{}
}

// WithConfigurationVersion adds the configurationVersion to the get Http after response rule not found response
func (o *GetHTTPAfterResponseRuleNotFound) WithConfigurationVersion(configurationVersion string) *GetHTTPAfterResponseRuleNotFound {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the get Http after response rule not found response
func (o *GetHTTPAfterResponseRuleNotFound) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the get Http after response rule not found response
func (o *GetHTTPAfterResponseRuleNotFound) WithPayload(payload *models.Error) *GetHTTPAfterResponseRuleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Http after response rule not found response
func (o *GetHTTPAfterResponseRuleNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHTTPAfterResponseRuleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetHTTPAfterResponseRuleDefault General Error

swagger:response getHttpAfterResponseRuleDefault
*/
type GetHTTPAfterResponseRuleDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHTTPAfterResponseRuleDefault creates GetHTTPAfterResponseRuleDefault with default headers values
func NewGetHTTPAfterResponseRuleDefault(code int) *GetHTTPAfterResponseRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &GetHTTPAfterResponseRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get HTTP after response rule default response
func (o *GetHTTPAfterResponseRuleDefault) WithStatusCode(code int) *GetHTTPAfterResponseRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get HTTP after response rule default response
func (o *GetHTTPAfterResponseRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the get HTTP after response rule default response
func (o *GetHTTPAfterResponseRuleDefault) WithConfigurationVersion(configurationVersion string) *GetHTTPAfterResponseRuleDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the get HTTP after response rule default response
func (o *GetHTTPAfterResponseRuleDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the get HTTP after response rule default response
func (o *GetHTTPAfterResponseRuleDefault) WithPayload(payload *models.Error) *GetHTTPAfterResponseRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get HTTP after response rule default response
func (o *GetHTTPAfterResponseRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHTTPAfterResponseRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
