// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package acl_runtime

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v4/models"
)

// GetServicesHaproxyRuntimeACLFileEntriesOKCode is the HTTP code returned for type GetServicesHaproxyRuntimeACLFileEntriesOK
const GetServicesHaproxyRuntimeACLFileEntriesOKCode int = 200

/*
GetServicesHaproxyRuntimeACLFileEntriesOK Successful operation

swagger:response getServicesHaproxyRuntimeAclFileEntriesOK
*/
type GetServicesHaproxyRuntimeACLFileEntriesOK struct {

	/*
	  In: Body
	*/
	Payload models.ACLFilesEntries `json:"body,omitempty"`
}

// NewGetServicesHaproxyRuntimeACLFileEntriesOK creates GetServicesHaproxyRuntimeACLFileEntriesOK with default headers values
func NewGetServicesHaproxyRuntimeACLFileEntriesOK() *GetServicesHaproxyRuntimeACLFileEntriesOK {

	return &GetServicesHaproxyRuntimeACLFileEntriesOK{}
}

// WithPayload adds the payload to the get services haproxy runtime Acl file entries o k response
func (o *GetServicesHaproxyRuntimeACLFileEntriesOK) WithPayload(payload models.ACLFilesEntries) *GetServicesHaproxyRuntimeACLFileEntriesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services haproxy runtime Acl file entries o k response
func (o *GetServicesHaproxyRuntimeACLFileEntriesOK) SetPayload(payload models.ACLFilesEntries) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesHaproxyRuntimeACLFileEntriesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.ACLFilesEntries{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetServicesHaproxyRuntimeACLFileEntriesBadRequestCode is the HTTP code returned for type GetServicesHaproxyRuntimeACLFileEntriesBadRequest
const GetServicesHaproxyRuntimeACLFileEntriesBadRequestCode int = 400

/*
GetServicesHaproxyRuntimeACLFileEntriesBadRequest Bad request

swagger:response getServicesHaproxyRuntimeAclFileEntriesBadRequest
*/
type GetServicesHaproxyRuntimeACLFileEntriesBadRequest struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServicesHaproxyRuntimeACLFileEntriesBadRequest creates GetServicesHaproxyRuntimeACLFileEntriesBadRequest with default headers values
func NewGetServicesHaproxyRuntimeACLFileEntriesBadRequest() *GetServicesHaproxyRuntimeACLFileEntriesBadRequest {

	return &GetServicesHaproxyRuntimeACLFileEntriesBadRequest{}
}

// WithConfigurationVersion adds the configurationVersion to the get services haproxy runtime Acl file entries bad request response
func (o *GetServicesHaproxyRuntimeACLFileEntriesBadRequest) WithConfigurationVersion(configurationVersion string) *GetServicesHaproxyRuntimeACLFileEntriesBadRequest {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the get services haproxy runtime Acl file entries bad request response
func (o *GetServicesHaproxyRuntimeACLFileEntriesBadRequest) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the get services haproxy runtime Acl file entries bad request response
func (o *GetServicesHaproxyRuntimeACLFileEntriesBadRequest) WithPayload(payload *models.Error) *GetServicesHaproxyRuntimeACLFileEntriesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services haproxy runtime Acl file entries bad request response
func (o *GetServicesHaproxyRuntimeACLFileEntriesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesHaproxyRuntimeACLFileEntriesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServicesHaproxyRuntimeACLFileEntriesNotFoundCode is the HTTP code returned for type GetServicesHaproxyRuntimeACLFileEntriesNotFound
const GetServicesHaproxyRuntimeACLFileEntriesNotFoundCode int = 404

/*
GetServicesHaproxyRuntimeACLFileEntriesNotFound The specified resource was not found

swagger:response getServicesHaproxyRuntimeAclFileEntriesNotFound
*/
type GetServicesHaproxyRuntimeACLFileEntriesNotFound struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServicesHaproxyRuntimeACLFileEntriesNotFound creates GetServicesHaproxyRuntimeACLFileEntriesNotFound with default headers values
func NewGetServicesHaproxyRuntimeACLFileEntriesNotFound() *GetServicesHaproxyRuntimeACLFileEntriesNotFound {

	return &GetServicesHaproxyRuntimeACLFileEntriesNotFound{}
}

// WithConfigurationVersion adds the configurationVersion to the get services haproxy runtime Acl file entries not found response
func (o *GetServicesHaproxyRuntimeACLFileEntriesNotFound) WithConfigurationVersion(configurationVersion string) *GetServicesHaproxyRuntimeACLFileEntriesNotFound {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the get services haproxy runtime Acl file entries not found response
func (o *GetServicesHaproxyRuntimeACLFileEntriesNotFound) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the get services haproxy runtime Acl file entries not found response
func (o *GetServicesHaproxyRuntimeACLFileEntriesNotFound) WithPayload(payload *models.Error) *GetServicesHaproxyRuntimeACLFileEntriesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services haproxy runtime Acl file entries not found response
func (o *GetServicesHaproxyRuntimeACLFileEntriesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesHaproxyRuntimeACLFileEntriesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetServicesHaproxyRuntimeACLFileEntriesDefault General Error

swagger:response getServicesHaproxyRuntimeAclFileEntriesDefault
*/
type GetServicesHaproxyRuntimeACLFileEntriesDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServicesHaproxyRuntimeACLFileEntriesDefault creates GetServicesHaproxyRuntimeACLFileEntriesDefault with default headers values
func NewGetServicesHaproxyRuntimeACLFileEntriesDefault(code int) *GetServicesHaproxyRuntimeACLFileEntriesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetServicesHaproxyRuntimeACLFileEntriesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get services haproxy runtime ACL file entries default response
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) WithStatusCode(code int) *GetServicesHaproxyRuntimeACLFileEntriesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get services haproxy runtime ACL file entries default response
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the get services haproxy runtime ACL file entries default response
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) WithConfigurationVersion(configurationVersion string) *GetServicesHaproxyRuntimeACLFileEntriesDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the get services haproxy runtime ACL file entries default response
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the get services haproxy runtime ACL file entries default response
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) WithPayload(payload *models.Error) *GetServicesHaproxyRuntimeACLFileEntriesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services haproxy runtime ACL file entries default response
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesHaproxyRuntimeACLFileEntriesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
