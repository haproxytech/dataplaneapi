// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/haproxytech/models"
)

// DeleteServerReader is a Reader for the DeleteServer structure.
type DeleteServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewDeleteServerAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteServerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteServerAccepted creates a DeleteServerAccepted with default headers values
func NewDeleteServerAccepted() *DeleteServerAccepted {
	return &DeleteServerAccepted{}
}

/*DeleteServerAccepted handles this case with default header values.

Configuration change accepted and reload requested
*/
type DeleteServerAccepted struct {
	/*ID of the requested reload
	 */
	ReloadID string
}

func (o *DeleteServerAccepted) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/servers/{name}][%d] deleteServerAccepted ", 202)
}

func (o *DeleteServerAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Reload-ID
	o.ReloadID = response.GetHeader("Reload-ID")

	return nil
}

// NewDeleteServerNoContent creates a DeleteServerNoContent with default headers values
func NewDeleteServerNoContent() *DeleteServerNoContent {
	return &DeleteServerNoContent{}
}

/*DeleteServerNoContent handles this case with default header values.

Server deleted
*/
type DeleteServerNoContent struct {
}

func (o *DeleteServerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/servers/{name}][%d] deleteServerNoContent ", 204)
}

func (o *DeleteServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServerNotFound creates a DeleteServerNotFound with default headers values
func NewDeleteServerNotFound() *DeleteServerNotFound {
	return &DeleteServerNotFound{}
}

/*DeleteServerNotFound handles this case with default header values.

The specified resource was not found
*/
type DeleteServerNotFound struct {
	Payload *models.Error
}

func (o *DeleteServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/servers/{name}][%d] deleteServerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServerDefault creates a DeleteServerDefault with default headers values
func NewDeleteServerDefault(code int) *DeleteServerDefault {
	return &DeleteServerDefault{
		_statusCode: code,
	}
}

/*DeleteServerDefault handles this case with default header values.

General Error
*/
type DeleteServerDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete server default response
func (o *DeleteServerDefault) Code() int {
	return o._statusCode
}

func (o *DeleteServerDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/servers/{name}][%d] deleteServer default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteServerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
