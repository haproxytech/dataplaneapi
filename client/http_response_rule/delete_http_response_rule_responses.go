// Code generated by go-swagger; DO NOT EDIT.

package http_response_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/haproxytech/models"
)

// DeleteHTTPResponseRuleReader is a Reader for the DeleteHTTPResponseRule structure.
type DeleteHTTPResponseRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteHTTPResponseRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewDeleteHTTPResponseRuleAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteHTTPResponseRuleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteHTTPResponseRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteHTTPResponseRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteHTTPResponseRuleAccepted creates a DeleteHTTPResponseRuleAccepted with default headers values
func NewDeleteHTTPResponseRuleAccepted() *DeleteHTTPResponseRuleAccepted {
	return &DeleteHTTPResponseRuleAccepted{}
}

/*DeleteHTTPResponseRuleAccepted handles this case with default header values.

Configuration change accepted and reload requested
*/
type DeleteHTTPResponseRuleAccepted struct {
	/*ID of the requested reload
	 */
	ReloadID string
}

func (o *DeleteHTTPResponseRuleAccepted) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/http_response_rules/{id}][%d] deleteHttpResponseRuleAccepted ", 202)
}

func (o *DeleteHTTPResponseRuleAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Reload-ID
	o.ReloadID = response.GetHeader("Reload-ID")

	return nil
}

// NewDeleteHTTPResponseRuleNoContent creates a DeleteHTTPResponseRuleNoContent with default headers values
func NewDeleteHTTPResponseRuleNoContent() *DeleteHTTPResponseRuleNoContent {
	return &DeleteHTTPResponseRuleNoContent{}
}

/*DeleteHTTPResponseRuleNoContent handles this case with default header values.

HTTP Response Rule deleted
*/
type DeleteHTTPResponseRuleNoContent struct {
}

func (o *DeleteHTTPResponseRuleNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/http_response_rules/{id}][%d] deleteHttpResponseRuleNoContent ", 204)
}

func (o *DeleteHTTPResponseRuleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteHTTPResponseRuleNotFound creates a DeleteHTTPResponseRuleNotFound with default headers values
func NewDeleteHTTPResponseRuleNotFound() *DeleteHTTPResponseRuleNotFound {
	return &DeleteHTTPResponseRuleNotFound{}
}

/*DeleteHTTPResponseRuleNotFound handles this case with default header values.

The specified resource was not found
*/
type DeleteHTTPResponseRuleNotFound struct {
	Payload *models.Error
}

func (o *DeleteHTTPResponseRuleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/http_response_rules/{id}][%d] deleteHttpResponseRuleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteHTTPResponseRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteHTTPResponseRuleDefault creates a DeleteHTTPResponseRuleDefault with default headers values
func NewDeleteHTTPResponseRuleDefault(code int) *DeleteHTTPResponseRuleDefault {
	return &DeleteHTTPResponseRuleDefault{
		_statusCode: code,
	}
}

/*DeleteHTTPResponseRuleDefault handles this case with default header values.

General Error
*/
type DeleteHTTPResponseRuleDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete HTTP response rule default response
func (o *DeleteHTTPResponseRuleDefault) Code() int {
	return o._statusCode
}

func (o *DeleteHTTPResponseRuleDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/http_response_rules/{id}][%d] deleteHTTPResponseRule default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteHTTPResponseRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
