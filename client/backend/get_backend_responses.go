// Code generated by go-swagger; DO NOT EDIT.

package backend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/haproxytech/models"
)

// GetBackendReader is a Reader for the GetBackend structure.
type GetBackendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBackendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetBackendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBackendDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBackendOK creates a GetBackendOK with default headers values
func NewGetBackendOK() *GetBackendOK {
	return &GetBackendOK{}
}

/*GetBackendOK handles this case with default header values.

Successful operation
*/
type GetBackendOK struct {
	Payload *GetBackendOKBody
}

func (o *GetBackendOK) Error() string {
	return fmt.Sprintf("[GET /services/haproxy/configuration/backends/{name}][%d] getBackendOK  %+v", 200, o.Payload)
}

func (o *GetBackendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetBackendOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackendNotFound creates a GetBackendNotFound with default headers values
func NewGetBackendNotFound() *GetBackendNotFound {
	return &GetBackendNotFound{}
}

/*GetBackendNotFound handles this case with default header values.

The specified resource was not found
*/
type GetBackendNotFound struct {
	Payload *models.Error
}

func (o *GetBackendNotFound) Error() string {
	return fmt.Sprintf("[GET /services/haproxy/configuration/backends/{name}][%d] getBackendNotFound  %+v", 404, o.Payload)
}

func (o *GetBackendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackendDefault creates a GetBackendDefault with default headers values
func NewGetBackendDefault(code int) *GetBackendDefault {
	return &GetBackendDefault{
		_statusCode: code,
	}
}

/*GetBackendDefault handles this case with default header values.

General Error
*/
type GetBackendDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get backend default response
func (o *GetBackendDefault) Code() int {
	return o._statusCode
}

func (o *GetBackendDefault) Error() string {
	return fmt.Sprintf("[GET /services/haproxy/configuration/backends/{name}][%d] getBackend default  %+v", o._statusCode, o.Payload)
}

func (o *GetBackendDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetBackendOKBody get backend o k body
swagger:model GetBackendOKBody
*/
type GetBackendOKBody struct {

	// version
	Version int64 `json:"_version,omitempty"`

	// data
	Data *models.Backend `json:"data,omitempty"`
}

// Validate validates this get backend o k body
func (o *GetBackendOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBackendOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBackendOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBackendOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBackendOKBody) UnmarshalBinary(b []byte) error {
	var res GetBackendOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
