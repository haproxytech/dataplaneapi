stages:
  - lint
  - build
  - e2e
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_BASE_IMAGE: $CI_REGISTRY_GO/haproxy-alpine
  BATS_VERSION: v1.4.1

diff:
  stage: lint
  image:
    name: $CI_REGISTRY_GO/docker:stable-go1.18
    entrypoint: [ "" ]
  services:
    - name: $CI_REGISTRY_GO/docker:20.10.5-dind
      alias: docker
  tags:
    - go
  only:
    - merge_requests
    - branches
  script:
    #- apk add make curl bash jq
    - SWAGGER_VERSION=$(curl -s https://raw.githubusercontent.com/haproxytech/client-native/master/Makefile | grep SWAGGER_VERSION -m 1 | awk -F"=" '{print $2}')
    - wget -q "https://github.com/go-swagger/go-swagger/releases/download/${SWAGGER_VERSION}/swagger_linux_amd64" -O /usr/local/bin/swagger && chmod +x /usr/local/bin/swagger
    - make generate-native
    - test -z "$(git diff 2> /dev/null)" || exit "Specification is not generated, issue \`make generate\` and commit the result"
    - test -z "$(git ls-files --others --exclude-standard 2> /dev/null)" || exit "Specification generation created untracked files, cannot proceed"

golangci-lint:
  stage: lint
  artifacts:
    paths:
      - build
  image:
    name: $CI_REGISTRY_GO/lint:1.46.2
    entrypoint: [""]
  tags:
    - go
  script:
    - golangci-lint cache clean && go clean -modcache -cache -i
    - golangci-lint run --timeout 5m --color always --max-issues-per-linter 0 --max-same-issues 0
  only:
    - merge_requests
    - branches
lint-commit-msg:
  stage: lint
  image:
    name: $CI_REGISTRY_GO/check-commit:v2.1.0
    entrypoint: [""]
  tags:
    - go
  script:
    - /check
  only:
    - merge_requests

build:
  stage: build
  artifacts:
    paths:
      - build
  image:
    name: $CI_REGISTRY_GO/golang:1.18
    entrypoint: [ "" ]
  tags:
    - go
  script:
    - go env
    - go mod verify
    - make build
  only:
    - merge_requests
    - branches

.e2e:
  stage: e2e
  artifacts:
    paths:
      - build
  image:
    name: $CI_REGISTRY_GO/docker:stable
    entrypoint: [ "" ]
  services:
    - name: $CI_REGISTRY_GO/docker:20.10.5-dind
      alias: docker
  variables:
    LOCAL_IP_ADDRESS: docker
  tags:
    - go
  before_script:
    - apk add git bash curl jq git
    - git clone https://github.com/bats-core/bats-core.git && cd bats-core && git checkout $BATS_VERSION && ./install.sh /usr/local && cd ..
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_GO
  script:
    - bash -x ./e2e/run.bash
  only:
    - merge_requests
    - branches

HAProxy_2_1:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: [ "1/2", "2/2" ]
        HAPROXY_VERSION: "2.1"
HAProxy_2_2:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: [ "1/2", "2/2" ]
        HAPROXY_VERSION: "2.2"
HAProxy_2_3:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: [ "1/2", "2/2" ]
        HAPROXY_VERSION: "2.3"
HAProxy_2_4:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: [ "1/2", "2/2" ]
        HAPROXY_VERSION: "2.4"
HAProxy_2_5:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: [ "1/2", "2/2" ]
        HAPROXY_VERSION: "2.5"
HAProxy_2_6:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: [ "1/2", "2/2" ]
        HAPROXY_VERSION: "2.6"
