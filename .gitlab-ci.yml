stages:
  - lint
  - build
  - e2e
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_BASE_IMAGE: $CI_REGISTRY_GO/haproxy-debian
  BATS_VERSION: v1.4.1
  GO_VERSION: "1.22"
  DOCKER_VERSION: "26.0"

diff:
  stage: lint
  image:
    name: $CI_REGISTRY_GO/docker:$DOCKER_VERSION-go$GO_VERSION
    entrypoint: [""]
  services:
    - name: $CI_REGISTRY_GO/docker:$DOCKER_VERSION-dind
      alias: docker
  tags:
    - go
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
  script:
    #- apk add make curl bash jq
    - SWAGGER_VERSION=$(curl -s https://raw.githubusercontent.com/haproxytech/client-native/master/Makefile | grep SWAGGER_VERSION -m 1 | awk -F"=" '{print $2}')
    - wget -q "https://github.com/go-swagger/go-swagger/releases/download/${SWAGGER_VERSION}/swagger_linux_amd64" -O /usr/local/bin/swagger && chmod +x /usr/local/bin/swagger
    - make generate-native
    - test -z "$(git diff 2> /dev/null)" || exit "Specification is not generated, issue \`make generate\` and commit the result"
    - test -z "$(git ls-files --others --exclude-standard 2> /dev/null)" || exit "Specification generation created untracked files, cannot proceed"
golangci-lint:
  stage: lint
  artifacts:
    paths:
      - build
  image:
    name: $CI_REGISTRY_GO/golang:$GO_VERSION
    entrypoint: [""]
  tags:
    - go
  script:
    - make lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
gofumpt:
  stage: lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
  image:
    name: $CI_REGISTRY_GO/golang:$GO_VERSION
    entrypoint: [""]
  tags:
    - go
  script:
    - make gofumpt
    - test -z "$(git diff 2> /dev/null)" || exit 'Go code not formatted, issue \`make gofumpt\` and commit the result'
lint-commit-msg:
  stage: lint
  image:
    name: $CI_REGISTRY_GO/check-commit:v2.1.0
    entrypoint: [""]
  tags:
    - go
  script:
    - /check
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

build:
  stage: build
  artifacts:
    paths:
      - build
  image:
    name: $CI_REGISTRY_GO/golang:$GO_VERSION
    entrypoint: [""]
  tags:
    - go
  script:
    - go env
    - go mod verify
    - make build
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'

.e2e:
  stage: e2e
  artifacts:
    paths:
      - build
  image:
    name: $CI_REGISTRY_GO/docker:$DOCKER_VERSION
    entrypoint: [""]
  services:
    - name: $CI_REGISTRY_GO/docker:$DOCKER_VERSION-dind
      alias: docker
  variables:
    LOCAL_IP_ADDRESS: docker
  tags:
    - go
  before_script:
    - apk add git bash curl jq git
    - git clone https://github.com/bats-core/bats-core.git && cd bats-core && git checkout $BATS_VERSION && ./install.sh /usr/local && cd ..
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY_GO
  script:
    - bash -x ./e2e/run.bash
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'

HAProxy_2_2:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: ["1/2", "2/2"]
        HAPROXY_VERSION: "2.2"
HAProxy_2_4:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: ["1/2", "2/2"]
        HAPROXY_VERSION: "2.4"
HAProxy_2_6:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: ["1/2", "2/2"]
        HAPROXY_VERSION: "2.6"
HAProxy_2_8:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: ["1/2", "2/2"]
        HAPROXY_VERSION: "2.8"
HAProxy_2_9:
  extends: .e2e
  parallel:
    matrix:
      - TESTPART: ["1/2", "2/2"]
        HAPROXY_VERSION: "2.9"
